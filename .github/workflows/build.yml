name: build ArchLinux
# auto-task.start-build-time = ?
on: { "push": { "paths": [".github/workflows/build.yml"] } }
# on: { "schedule": [{ "cron": "10 2 * * 5" }] }

jobs:
  docker:
    strategy:
      fail-fast: false
      matrix:
        arch:
          # - x64
          - x64v2
          - x64v3
          # - x64v4
          - rv64gc
          - arm64
          - armv7a
          - ppc64le
          - ppc
          - ppc64
          - loong64
          - i486
          - i686
          - x86
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: zsh --pipefail -fex {0}
    env:
      ZSH_REPO: ghcr.io/2moe/zsh-static
      ARCHIMG_TMM_ARCH: ${{matrix.arch}}
    steps:
      - name: install zsh
        shell: sh -e {0}
        run: docker run --rm -v /usr/local/bin:/app ${{env.ZSH_REPO}} cp /opt/bin/zsh /app/
      - name: set up QEMU
        if:  (!startsWith(matrix.arch, 'x64')) || (!endsWith(matrix.arch, '86'))
        uses: docker/setup-qemu-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4
        with:
          ref: dev
          fetch-depth: 1

      - name: build (arch)
        run: ./src/docker/build

      - name: build (arch-archive)
        env:
          ARCHIMG_ARCHIVE: true
        run: ./src/docker/build

      - name: build (arch-base)
        env:
          ARCHIMG_BASE: true
        run: ./src/docker/build

      - name: build (arch-dev)
        env:
          ARCHIMG_BASE_DEV: true
        run: ./src/docker/build

      - name: build (arch-testing)
        env:
          ARCHIMG_TESTING: true
        run: ./src/docker/build

      - name: build (arch-slim)
        env:
          ARCHIMG_SLIM: true
        run: ./src/docker/build
