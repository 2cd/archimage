#!/usr/bin/env zsh
set -fexo pipefail
# -------------
typeset -x DOCKER_BUILDKIT=1
ARCHIVE=${ARCHIMG_ARCHIVE:-false}
BASE=${ARCHIMG_BASE:-false}
BASE_DEV=${ARCHIMG_BASE_DEV:-false}
TESTING=${ARCHIMG_TESTING:-false}
SLIM=${ARCHIMG_SLIM:-false}

src_dir=${0:a:h}
context=$(
    cd $src_dir/../../assets/etc || exit 1
    pwd
)
build_args=(
    build
    --progress=plain
    --file $src_dir/Dockerfile
)

local -A tmm_arch_map=(
    # tmm_arch      os_arch,oci_arch
    x64             x86_64,amd64
    x64v2           x86_64,amd64/v2
    x64v3           x86_64,amd64/v3
    x64v4           x86_64,amd64/v3  # amd64/v4 -> v3
    rv64gc          riscv64
    arm64           aarch64,arm64
    armv7a          armv7h,arm/v7
    ppc64le         powerpc64le,ppc64le
    ppc             powerpc
    ppc64           powerpc64
    loong64         loong64
    i486            i486,386
    i686            i686,386
    x86             pentium4,386
    # armv6           armv6h,arm/v6
    # armv5te         arm,arm/v5
)

arch_repo=ghcr.io/2cd/arch
# Only for x64: archive, testing
# x64v4, ppc*, loong64, i486, i686: "", slim
# x64, x64v2, x64v3, rv64gc, arm64, armv7a, x86: "", base, base-devel, slim
#
# ARCHIVE=true
# BASE=true
# BASE_DEV=true
# TESTING=true
# SLIM=true
today=$(date --utc +%Y-%m-%d)
ARCHIMG_TMM_ARCH=${ARCHIMG_TMM_ARCH:-x64v2}
for tmm_arch arch (${(kv)tmm_arch_map}) {
    if [[ ${ARCHIMG_TMM_ARCH} != $tmm_arch ]] {
        continue
    }

    arch_arr=(${(s^,^)arch})
    os_arch=$arch_arr[1]
    oci_arch=$arch_arr[2]
    if ((! #oci_arch)) {
        oci_arch=$os_arch
    }

    platform=linux/$oci_arch
    args=(
        $build_args
        --platform   $platform
        #
        --build-arg
        OS_ARCH=$os_arch
        --build-arg
        TMM_ARCH=$tmm_arch
        --build-arg
    )
    case $tmm_arch {
        (x64*) tmm_arch_v0=x64      ;;
        (i*86) tmm_arch_v0=x86      ;;
        (*)    tmm_arch_v0=$tmm_arch;;
    }
    args+=TMM_ARCH_V0=$tmm_arch_v0

    repo=${arch_repo}
    plain=true
    for v (ARCHIVE BASE BASE_DEV TESTING SLIM) {
        if {${(P)v}} {
            lower=${(L)v}
            case $lower {
                (archive | testing)
                    if [[ $tmm_arch != x64 ]] {
                        exit
                    }
                ;;
                (base_dev)
                    # dev => +base
                    args+=(
                        --build-arg
                        BASE=true
                    )
                    lower=dev ;|
                (base*)
                    case $tmm_arch {
                        (x64v4 | i[4-6]86 | ppc* | loong64) exit ;;
                    }
                ;;
            }
            args+=(
                --build-arg
                $v=true
            )
            plain=false
            repo=${arch_repo}-$lower
        }
    }

    unset date_repo
    if {$plain} {
        date_repo=${repo}:${tmm_arch}-${today}
        args+=(
            --tag $date_repo
        )
    }

    repo+=:$tmm_arch

    args+=(
        --tag   $repo
        $context
    )
    docker $args
    docker push $repo
    if (($+date_repo)) {
        docker push $date_repo
    }

}
